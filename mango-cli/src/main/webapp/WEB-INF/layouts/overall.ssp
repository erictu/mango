<%@ val dictionary:     String  %>
<%@ val readsExist:     Boolean %>
<%@ val readsSamples:   Option[List[String]] %>
<%@ val variantsExist:  Boolean %>
<%@ val featuresExist:  Boolean %>

<html xmlns="http://www.w3.org/1999/html">
<% render("templates/head.ssp") %>
<% render("navigation/navigation.ssp", Map("isOverall" -> true)) %>
<% render("navigation/panAndZoom.ssp", Map("page" -> "reads")) %>
<% render("templates/sidebar.ssp") %>


<div class="main">
    <div id="home">
        <% render("templates/home.ssp", Map("dictionary" -> dictionary)) %>
    </div>

    <div id="tracks">
        <div class="graphArea" id="refArea"></div>

        #if (featuresExist)
            <div class="graphArea" id="featArea"></div>
        #end
        
        #if (readsExist)
            <div class="graphArea" id="readsArea">
            <% readsSamples.get.foreach(s =>
                render("templates/reads.ssp", Map("sample" -> s, "id" -> s.replace("/","")))) %>
            </div>
        #end
    </div>
</div>



<script src="js/utilities.js"></script>
<script src="js/formSubmit.js"></script>
<script src="js/overall.js"></script>
<script src="js/reference.js"></script>

<script>
    <!-- Define Global Variables -->
    var readsExist = ${readsExist};
    var variantsExist = ${variantsExist};
    var featuresExist = ${featuresExist};

    var sequenceDict = "${dictionary}"
    sequenceDict = sequenceDict.split(",");
    autoComplete(sequenceDict);
    refVis(sequenceDict);
    toggleContent(false);

</script>

#if (featuresExist)
    <script src="js/features.js"></script>
#end
#if (variantsExist)
    <script src="js/variants.js"></script>
#end
#if (readsExist)
    <% var jsonSamples = readsSamples.get.reduce((a1, a2) => (a1 + "," + a2)) %>
    <script>
        var sampleIds = "${jsonSamples}"
        var rawSamples = sampleIds.split(",").unique();
        var samples = filterNames(rawSamples);
    </script>
    <script src="js/freq.js"></script>
    <script src="js/reads.js"></script>
#end

</html>
